kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
  - apiGroups: [ "" ]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader-binding
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ''
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: ''
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-room-service
  labels:
    app: chat-room-service
spec:
  minReadySeconds: 60
  replicas: 3
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: chat-room-service
  template:
    metadata:
      labels:
        app: chat-room-service
        
        # This label is used to identify the service to Orleans
        orleans/serviceId: chat-room

        # This label is used to identify an instance of a cluster to Orleans.
        # Typically, this will be the same value as the previous label, or any 
        # fixed value.
        # In cases where you are not using rolling deployments (for example,
        # blue/green deployments),
        # this value can allow for distinct clusters which do not communicate
        # directly with each others,
        # but which still share the same storage and other resources.
        orleans/clusterId: deivanov-cluster
    spec:
      containers:
        - name: chat-room-service
          image: deivanovacr.azurecr.io/chat-room:1.2.0
          ports:
          # Define the ports which Orleans uses
          - containerPort: 11111
          - containerPort: 30000
          - containerPort: 8080
          env:
          # Configure settings to let Orleans know which cluster it belongs to
          # and which pod it is running in
          - name: ORLEANS_SERVICE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/serviceId']
          - name: ORLEANS_CLUSTER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/clusterId']
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DOTNET_SHUTDOWNTIMEOUTSECONDS
            value: "120"
          resources:
            limits:
              cpu: 1
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      terminationGracePeriodSeconds: 180
---
apiVersion: v1
kind: Service
metadata:
  name: chat-room-service
spec:
  ports:
  - port: 30000
    protocol: TCP
    name: gateway
  - port: 8080
    protocol: TCP
    name: dashboard
  selector:
    app: chat-room-service